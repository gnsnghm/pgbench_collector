services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped

  postgres:
    image: timescale/timescaledb:latest-pg15
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.52.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.4.2
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_GRAFANA_PASS}
    ports:
      - "3001:3000"
    restart: unless-stopped

  backend:
    build: ./backend
    environment:
      REDIS_URL: redis://redis:6379
      PG_URL: postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/lab?sslmode=disable
    ports:
      - "4000:4000"
    depends_on: [redis, postgres]
    restart: unless-stopped

  ui:
    build: ./ui
    environment:
      NEXT_PUBLIC_WS_BASE: ws://localhost:4000
    ports:
      - "3000:3000"
    depends_on: [backend]
    restart: unless-stopped

volumes:
  pgdata:
